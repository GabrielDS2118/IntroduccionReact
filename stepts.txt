PRIMEROS PASOS CON REACT

   1.Qué es React?
    
    React es una herramienta de JavaScript en el front end que nos ayuda a construir la parte visual de nuestras aplicaciones web, 
    las interfaces con las que van a interactuar nuestros usuarios.
    React es una librería progresiva, esto porque puedes hacer desde una página sencilla 
    hasta poder desarrollar aplicaciones gigantes, y llegar a convertirse en un framework en conjunto de muchas herramientas que existen a su alrededor. 

    2.Cuándo usar React.js

        ¿Qué es un MVP?
            MVP (Minimum Viable Product - Producto Mínimo Viable): 
            Se refiere a construir funcionalidades pequeñas que sean completas 
            para que podamos lanzarla y medir su impacto y decidir si seguir ese camino o probar otra cosa.
    
        Análisis: componentes y comportamientos

            Componentes: 
                - Un componente es una pieza de código que describe una parte reutilizable de la interfaz.

                -Son la forma de estructurar las piezas de nuestra página web para hacerlas escalables, nos ahorran tiempo y esfuerzo.

                -Son abstracciones de los elementos de nuestra página web para ser reusados las veces que necesitemos.

                -Los componentes pueden trabajar de manera independiente a los demás, 
                pero con React todos los componentes tienen una conexión con el resto de componentes, 
                para que en conjunto puedan reaccionar al comportamiento de los usuarios.

                Ejemplo: Lista de TODO

            Comportamiento: 
                Cómo actúan nuestros componentes con las interacciones de los usuarios.
                Ejemplo: Agreagar un TODO

    
    3.Instalacion con Create React App

        React es multiplataforma,lo podemos usar para desarrollar en mobile y en web
        Cuando trabajamos en web usamos react-dom

        Crear proyecto:
        
            Introduccion/ -> npx create-react-app ps-todo-app
                De esta manera creamos un proyecto de react rapidamente sin necesidad de hacer
                configuraciones

            Iniciar proyecto:
                cd ps-todo-app
                npm start

FUNDAMENTOS DE REACT: MAQUETACION

    5. JSX: componentes vs. elementos (y props vs. atributos)

        Componentes vs. elementos
            Componente:

                const Component = () => {
                    const titulo = Soy un título;
        
                    return( <h1>{titulo}h1>)
                }
            
            Elemento: Lo que retorna un componente
                <h1>Soy un títuloh1>
        
        Propiedades vs. Atributos

            Atributo
                Los atributos los pueden tener las etiquetas de HTML.
                <h1 class="titulo">Soy un títuloh1>
            
            Propiedades:
                Parámetros que reciben los componentes

                <Componente saludo = "Hola"></Componente>
                const Componente = (props) => {
                    return(
                        <h1> Saludo </h1>
                    )
                }


Local Storage:
    Nos permite persistir información al recargarse la página
    Recibe solo strings
        JSON.stringify() -> convertir a texto
        JSON.parse() -> convertir a js


useEffect:

    Diferentes maneras de actualizar nuestros componentes
    Existen tres diferentes maneras para aplicar el hook de efecto, todas funcionan diferente a la hora de re-renderizar nuestros componentes.

    Sin pasar un arreglo como segundo argumento: useEffect(funcion)
    Cuando no le pasamos un segundo argumento con las condiciones de cuándo se debe re-ejecutar nuestra función, React tomará como condiciones que se debe ejecutar nuestra función todas las veces que ocurra un re-renderizado, y también cada vez que se actualice alguna prop (Si es que el componente recibe alguna).

    Pasando un arreglo vacío: useEffect(funcion, [])
    Cuando pasamos un arreglo vacío, le estás diciendo a React que no hay ninguna condición para volver a ejecutar el código de nuestra función, entonces solamente se ejecutará en el renderizado inicial.

    Pasando un arreglo con datos: useEffect(funcion, [val1, val2, valN])
    Cuando especificas las condiciones dentro del arreglo del segundo parámetro, le estás diciendo a React que ejecute nuestra función en el renderizado inicial y también cuando algún dato del arreglo cambie.
            
    
